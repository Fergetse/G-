:

{res=[ id: res, type: int, value: ? ]
, var=[ id: var, type: int, value: 10 ]
, i=[ id: i, type: int, value: 0 ]
, j=[ id: j, type: int, value: 0 ]
, var3=[ id: var3, type: int, value: 30 ]
, var2=[ id: var2, type: int, value: 20 ]
}
******* PRIMER BARRIDO TERMINADO ******* 



jmp start
res dw ?
var dw 10
i dw 0
j dw 0
var3 dw 30
var2 dw 20

start:
mov ax, 10
add ax, var3
mov res, ax
mov ax, res
add ax, var3
mov res, ax
mov ax, res
add ax, var2
mov res, ax
mov ax, res
add ax, var
mov res, ax
mov ax, res
call print
mov ah, 02h
mov dl, 0ah
int 21h
mov dl, 0dh
int 21h
mov ah, 0

label0:

mov ax, i
add ax, 10
mov i, ax
label1:

mov ax, j
add ax, 1
mov j, ax
mov ax, 2
call print
mov ah, 02h
mov dl, 0ah
int 21h
mov dl, 0dh
int 21h
mov ah, 0

cmp j, 2
jl label1
mov j, 0

mov ax, i
call print
mov ah, 02h
mov dl, 0ah
int 21h
mov dl, 0dh
int 21h
mov ah, 0

cmp i, 50
jne label2
mov ax, 256
call print
mov ah, 02h
mov dl, 0ah
int 21h
mov dl, 0dh
int 21h
mov ah, 0

label2:

cmp i, 100
jl label0
mov i, 0


ret

print proc
cmp ax, 0
jne print_ax_r
push ax
mov al, '0'
mov ah, 0eh
int 10h
pop ax
ret 
print_ax_r:
pusha
mov dx, 0
cmp ax, 0
je pn_done
mov bx,10
div bx
call print_ax_r
mov ax, dx
add al, 30h
mov ah, 0eh
int 10h
jmp pn_done
pn_done:
popa
ret
endp

******* SEGUNDO BARRIDO TERMINADO ******* 







An√°lisis exitoso
