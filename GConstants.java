/* Generated By:JavaCC: Do not edit this line. GConstants.java */

/** 
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface GConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int ARRAY_START = 4;
  /** RegularExpression Id. */
  int ARRAY_END = 5;
  /** RegularExpression Id. */
  int START = 6;
  /** RegularExpression Id. */
  int END = 7;
  /** RegularExpression Id. */
  int SET = 8;
  /** RegularExpression Id. */
  int IF = 9;
  /** RegularExpression Id. */
  int REPEAT = 10;
  /** RegularExpression Id. */
  int DOT = 11;
  /** RegularExpression Id. */
  int COMMA = 12;
  /** RegularExpression Id. */
  int TO = 13;
  /** RegularExpression Id. */
  int BIN = 14;
  /** RegularExpression Id. */
  int DEC = 15;
  /** RegularExpression Id. */
  int AND = 16;
  /** RegularExpression Id. */
  int OR = 17;
  /** RegularExpression Id. */
  int SHOW = 18;
  /** RegularExpression Id. */
  int SHOWW = 19;
  /** RegularExpression Id. */
  int INT = 20;
  /** RegularExpression Id. */
  int WORD = 21;
  /** RegularExpression Id. */
  int BYTE = 22;
  /** RegularExpression Id. */
  int DECIMAL = 23;
  /** RegularExpression Id. */
  int ARRAY = 24;
  /** RegularExpression Id. */
  int ADD = 25;
  /** RegularExpression Id. */
  int SUB = 26;
  /** RegularExpression Id. */
  int MUL = 27;
  /** RegularExpression Id. */
  int DIV = 28;
  /** RegularExpression Id. */
  int MOD = 29;
  /** RegularExpression Id. */
  int EQ = 30;
  /** RegularExpression Id. */
  int NEQ = 31;
  /** RegularExpression Id. */
  int BEQ = 32;
  /** RegularExpression Id. */
  int GEQ = 33;
  /** RegularExpression Id. */
  int BE = 34;
  /** RegularExpression Id. */
  int GE = 35;
  /** RegularExpression Id. */
  int IDENTIFIER = 36;
  /** RegularExpression Id. */
  int INTEGER = 37;
  /** RegularExpression Id. */
  int STRING = 38;
  /** RegularExpression Id. */
  int CHAR = 39;
  /** RegularExpression Id. */
  int FLOAT = 40;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int DentroComentario = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"comment\"",
    "\"fin\"",
    "<token of kind 3>",
    "\"astart\"",
    "\"aend\"",
    "\"start\"",
    "\"end\"",
    "\"set\"",
    "\"if\"",
    "\"repeat\"",
    "\".\"",
    "\",\"",
    "\"to\"",
    "\"printBin\"",
    "\"printDec\"",
    "\"and\"",
    "\"or\"",
    "\"show\"",
    "\"showW\"",
    "\"int\"",
    "\"word\"",
    "\"byte\"",
    "\"decimal\"",
    "\"array\"",
    "\"add\"",
    "\"sub\"",
    "\"mul\"",
    "\"div\"",
    "\"mod\"",
    "\"eq\"",
    "\"neq\"",
    "\"beq\"",
    "\"geq\"",
    "\"be\"",
    "\"ge\"",
    "<IDENTIFIER>",
    "<INTEGER>",
    "<STRING>",
    "<CHAR>",
    "<FLOAT>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\n\"",
    "<token of kind 45>",
  };

}
