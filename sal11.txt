jmp start
var dw 10
var2 dw 20
var3 dw 30
res dw 0
start:

mov ax, 10
add ax, var3
mov res, ax
mov ax, res
add ax, var3
mov res, ax
mov ax, res
add ax, var2
mov res, ax
mov ax, res
add ax, var
mov res, ax
call print_ax
ret

print_ax proc
cmp ax, 0
jne print_ax_r
push ax
mov al, '0'
mov ah, 0eh
int 10h
pop ax
ret 
print_ax_r:
pusha
mov dx, 0
cmp ax, 0
je pn_done
mov bx,10
div bx
call print_ax_r
mov ax, dx
add al, 30h
mov ah, 0eh
int 10h
jmp pn_done
pn_done:
popa
ret
endp

